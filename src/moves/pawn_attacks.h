#ifndef PAWN_ATTACKS_H
#define PAWN_ATTACKS_H

#include "../board.h"

bitboard pawnAttacks[2][64] = {
	// Black
	{   0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000002,
	0x0000000000000005,
	0x000000000000000a,
	0x0000000000000014,
	0x0000000000000028,
	0x0000000000000050,
	0x00000000000000a0,
	0x0000000000000040,
	0x0000000000000200,
	0x0000000000000500,
	0x0000000000000a00,
	0x0000000000001400,
	0x0000000000002800,
	0x0000000000005000,
	0x000000000000a000,
	0x0000000000004000,
	0x0000000000020000,
	0x0000000000050000,
	0x00000000000a0000,
	0x0000000000140000,
	0x0000000000280000,
	0x0000000000500000,
	0x0000000000a00000,
	0x0000000000400000,
	0x0000000002000000,
	0x0000000005000000,
	0x000000000a000000,
	0x0000000014000000,
	0x0000000028000000,
	0x0000000050000000,
	0x00000000a0000000,
	0x0000000040000000,
	0x0000000200000000,
	0x0000000500000000,
	0x0000000a00000000,
	0x0000001400000000,
	0x0000002800000000,
	0x0000005000000000,
	0x000000a000000000,
	0x0000004000000000,
	0x0000020000000000,
	0x0000050000000000,
	0x00000a0000000000,
	0x0000140000000000,
	0x0000280000000000,
	0x0000500000000000,
	0x0000a00000000000,
	0x0000400000000000,
	0x0002000000000000,
	0x0005000000000000,
	0x000a000000000000,
	0x0014000000000000,
	0x0028000000000000,
	0x0050000000000000,
	0x00a0000000000000,
	0x0040000000000000},
	// White
	{   0x0000000000000200,
	0x0000000000000500,
	0x0000000000000a00,
	0x0000000000001400,
	0x0000000000002800,
	0x0000000000005000,
	0x000000000000a000,
	0x0000000000004000,
	0x0000000000020000,
	0x0000000000050000,
	0x00000000000a0000,
	0x0000000000140000,
	0x0000000000280000,
	0x0000000000500000,
	0x0000000000a00000,
	0x0000000000400000,
	0x0000000002000000,
	0x0000000005000000,
	0x000000000a000000,
	0x0000000014000000,
	0x0000000028000000,
	0x0000000050000000,
	0x00000000a0000000,
	0x0000000040000000,
	0x0000000200000000,
	0x0000000500000000,
	0x0000000a00000000,
	0x0000001400000000,
	0x0000002800000000,
	0x0000005000000000,
	0x000000a000000000,
	0x0000004000000000,
	0x0000020000000000,
	0x0000050000000000,
	0x00000a0000000000,
	0x0000140000000000,
	0x0000280000000000,
	0x0000500000000000,
	0x0000a00000000000,
	0x0000400000000000,
	0x0002000000000000,
	0x0005000000000000,
	0x000a000000000000,
	0x0014000000000000,
	0x0028000000000000,
	0x0050000000000000,
	0x00a0000000000000,
	0x0040000000000000,
	0x0200000000000000,
	0x0500000000000000,
	0x0a00000000000000,
	0x1400000000000000,
	0x2800000000000000,
	0x5000000000000000,
	0xa000000000000000,
	0x4000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000,
	0x0000000000000000}
};

#endif